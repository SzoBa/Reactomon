{"version":3,"sources":["contexts/ColorContext.js","contexts/CatchPokemonContext.js","elements/MainBody.js","components/images/background.jpg","components/images/background2.jpg","components/images/main.jpg","contexts/ThemeStyle.js","contexts/ThemeContext.js","contexts/ThemeToggler.js","components/layout/Navbar.js","components/pages/MainPage.js","components/pages/PokemonListItem.js","hooks/useFetch.js","components/pages/PokemonList.js","components/pages/TypeListItem.js","components/pages/TypeList.js","components/pages/SimpleItem.js","components/pages/PokemonDetail.js","components/pages/CatchedList.js","App.js","index.js"],"names":["ColorContext","createContext","ColorProvider","props","useState","fontColor","setFontColor","Provider","value","children","CatchPokemonContext","CatchPokemonProvider","collectedPokemons","catchPokemon","MainBody","styled","div","currentTheme","backgroundImage","textColor","AppTheme","junk","togglerTextColor","togglerTextBackgroundColor","togglerTextColorHover","togglerTextBackgroundColorHover","background1","mainImage","main","textColorOnHover","cardBackgroundColor","blade","background2","ThemeContext","ThemeContextProvider","theme","ThemeTogglerButton","button","ButtonText","span","ThemeToggler","useContext","themeMode","setThemeMode","onClick","title","NavbarMain","NavbarTitle","h1","NavbarLinksContainer","NavbarLink","Link","currenttheme","useLocation","pathname","to","Navbar","className","Fragment","MainPageH1","MainPageText","p","MainPage","ListItemCard","ListItemText","ListItemLink","CatchButton","PokemonListItem","pokemon","name","id","url","match","toString","replaceAll","buttonText","setButtontext","filter","length","prevPokemons","useFetch","isLoading","setIsLoading","fetchedData","setFetchedData","useEffect","mounted","axios","get","then","response","data","PokemonListContainer","PokemonList","pokemons","results","map","index","a","TypeName","TypeListItem","type","test","href","TypeListContainer","TypeList","types","SimpleAttributeText","color","AttributeName","SimpleItem","attribute","simpleData","DetailsContainer","DetailsCard","PokemonDetail","setId","params","details","onMouseEnter","prevColor","onMouseLeave","Object","entries","key","CatchedListContainer","CatchedList","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.df3aa40f.chunk.js","sourcesContent":["import React, { useState, createContext } from \"react\";\n\nexport const ColorContext = createContext();\n\nexport const ColorProvider = (props) => {\n  const [fontColor, setFontColor] = useState(\"white\");\n\n  return (\n    <ColorContext.Provider value={[fontColor, setFontColor]}>\n      {props.children}\n    </ColorContext.Provider>\n  );\n};\n\n//not default\n","import React, { useState, createContext } from \"react\";\n\nexport const CatchPokemonContext = createContext();\n\nexport const CatchPokemonProvider = (props) => {\n  const [collectedPokemons, catchPokemon] = useState([]);\n\n  return (\n    <CatchPokemonContext.Provider value={[collectedPokemons, catchPokemon]}>\n      {props.children}\n    </CatchPokemonContext.Provider>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const MainBody = styled.div`\n  background: url(${(props) => props.currentTheme.backgroundImage}) no-repeat\n    fixed;\n  color: ${(props) => props.currentTheme.textColor};\n  background-size: cover;\n  min-height: 100%;\n  width: 100%;\n  font-family: Arial, Helvetica, sans-serif;\n  line-height: 1.4;\n  box-sizing: border-box;\n`;\n\nexport default MainBody;\n","export default __webpack_public_path__ + \"static/media/background.34715a72.jpg\";","export default __webpack_public_path__ + \"static/media/background2.5cb5f4d9.jpg\";","export default __webpack_public_path__ + \"static/media/main.dd31117f.jpg\";","import background2 from \"../components/images/background.jpg\";\nimport background1 from \"../components/images/background2.jpg\";\nimport main from \"../components/images/main.jpg\";\n\nconst AppTheme = {\n  junk: {\n    togglerTextColor: \"grey\",\n    togglerTextBackgroundColor: \"white\",\n    togglerTextColorHover: \"white\",\n    togglerTextBackgroundColorHover: \"grey\",\n    backgroundImage: background1,\n    mainImage: main,\n\n    textColor: \"grey\",\n    textColorOnHover: \"black\",\n\n    cardBackgroundColor: \"grey\",\n  },\n  blade: {\n    togglerTextColor: \"lightblue\",\n    togglerTextBackgroundColor: \"white\",\n    togglerTextColorHover: \"white\",\n    togglerTextBackgroundColorHover: \"lightblue\",\n    backgroundImage: background2,\n    mainImage: main,\n\n    textColor: \"lightblue\",\n    textColorOnHover: \"palevioletred\",\n\n    cardBackgroundColor: \"palevioletred\",\n  },\n};\n\nexport default AppTheme;\n","import { useState, createContext } from \"react\";\n\nexport const ThemeContext = createContext([\"junk\", () => {}]);\n\nexport const ThemeContextProvider = (props) => {\n  const theme = useState(\"junk\");\n\n  return (\n    <ThemeContext.Provider value={theme}>\n      {props.children}\n    </ThemeContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { ThemeContext } from \"./ThemeContext\";\nimport AppTheme from \"./ThemeStyle\";\n\nconst ThemeTogglerButton = styled.button`\n  font-size: 1em;\n  padding: 7px 10px;\n  border-radius: 10px;\n  border: 1px solid grey;\n  cursor: pointer;\n  height: 75%;\n  align-self: center;\n  color: ${(props) => props.currentTheme.togglerTextColor};\n  background: ${(props) => props.currentTheme.togglerTextBackgroundColor};\n  &:hover {\n    color: ${(props) => props.currentTheme.togglerTextColorHover};\n    background: ${(props) =>\n      props.currentTheme.togglerTextBackgroundColorHover};\n  }\n`;\n\nconst ButtonText = styled.span`\n  font-weight: bold;\n`;\n\nconst ThemeToggler = () => {\n  const [themeMode, setThemeMode] = useContext(ThemeContext);\n\n  const theme = useContext(ThemeContext)[0];\n  const currentTheme = AppTheme[theme];\n\n  function changeTheme() {\n    setThemeMode(themeMode === \"junk\" ? \"blade\" : \"junk\");\n  }\n\n  return (\n    <ThemeTogglerButton\n      onClick={changeTheme}\n      currentTheme={currentTheme}\n      title=\"switch theme\"\n    >\n      Theme: <ButtonText>{themeMode === \"junk\" ? \"Grey\" : \"Blue\"}</ButtonText>\n    </ThemeTogglerButton>\n  );\n};\n\nexport default ThemeToggler;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { Link, useLocation } from \"react-router-dom\";\nimport AppTheme from \"../../contexts/ThemeStyle\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\nimport ThemeToggler from \"../../contexts/ThemeToggler\";\n\nconst NavbarMain = styled.div`\n  text-align: center;\n`;\n\nconst NavbarTitle = styled.h1`\n  color: ${(props) => props.currentTheme.textColor};\n  font-size: 4em;\n  text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\n  padding-left: 3%;\n`;\n\nconst NavbarLinksContainer = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  padding: 5px;\n`;\n\nconst NavbarLink = styled(Link)`\n  color: ${(props) => props.currenttheme.textColor};\n  text-decoration: none;\n  text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\n  padding: 10px;\n  font-weight: bold;\n  font-size: 2em;\n  border-radius: 20px;\n  visibility: ${(props) =>\n    useLocation().pathname === props.to ? \"hidden\" : \"\"};\n  &:hover {\n    color: ${(props) => props.currenttheme.textColorOnHover};\n  }\n`;\n\nconst Navbar = (props) => {\n  const theme = useContext(ThemeContext)[0];\n  const currentTheme = AppTheme[theme];\n\n  return (\n    <NavbarMain className=\"navBar\">\n      <NavbarTitle currentTheme={currentTheme}>Reactomon</NavbarTitle>\n      <NavbarLinksContainer>\n        <React.Fragment>\n          <NavbarLink currenttheme={currentTheme} to=\"/\">\n            Main Page\n          </NavbarLink>\n          <NavbarLink currenttheme={currentTheme} to=\"/pokemons\">\n            Pokemons\n          </NavbarLink>\n          <NavbarLink currenttheme={currentTheme} to=\"/types\">\n            Types\n          </NavbarLink>\n          <NavbarLink currenttheme={currentTheme} to=\"/catched\">\n            Catched\n          </NavbarLink>\n          <NavbarLink currenttheme={currentTheme} to=\"/#\">\n            About\n          </NavbarLink>\n          <ThemeToggler></ThemeToggler>\n        </React.Fragment>\n      </NavbarLinksContainer>\n    </NavbarMain>\n  );\n};\n\nexport default Navbar;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport AppTheme from \"../../contexts/ThemeStyle\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst MainPageH1 = styled.h1`\n  margin-top: 3%;\n  font-size: 4em;\n  color: ${(props) => props.currentTheme.textColor};\n  text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\n  text-align: center;\n`;\n\nconst MainPageText = styled.p`\n  font-size: 2em;\n  margin-top: 3%;\n  color: ${(props) => props.currentTheme.textColor};\n  text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\n  text-align: center;\n`;\n\nconst MainPage = (props) => {\n  const theme = useContext(ThemeContext)[0];\n  const currentTheme = AppTheme[theme];\n\n  return (\n    <div>\n      <MainPageH1 currentTheme={currentTheme}>This is the Main Page</MainPageH1>\n      <MainPageText currentTheme={currentTheme}>\n        Choose from the links above to navigate to the desired page\n      </MainPageText>\n    </div>\n  );\n};\n\nexport default MainPage;\n","import React, { useContext, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { CatchPokemonContext } from \"../../contexts/CatchPokemonContext\";\nimport AppTheme from \"../../contexts/ThemeStyle\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst ListItemCard = styled.div`\n  font-family: arial;\n  /* display: inline-block; */\n  border: solid black 2px;\n  border-radius: 20px;\n  height: 100px;\n  width: 175px;\n  text-align: center;\n  margin: 5px 0;\n  padding: 10px;\n  background-color: ${(props) => props.currentTheme.cardBackgroundColor};\n  opacity: 0.9;\n  box-shadow: 8px 8px 16px 0 rgba(0, 0, 0, 0.4);\n  transition: 0.3s;\n  &:hover {\n    box-shadow: 16px 16px 32px 0 rgba(0, 0, 0, 0.9);\n  }\n`;\n\nconst ListItemText = styled.p`\n  font-size: 1em;\n  margin: 1%;\n  color: white;\n  text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\n  text-align: center;\n`;\n\nconst ListItemLink = styled(Link)`\n  margin: 1%;\n  font-size: 1em;\n  font-weight: bold;\n  color: white;\n  text-decoration: none;\n  text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\n  text-align: center;\n  &:hover {\n    color: palevioletred;\n  }\n`;\n\nconst CatchButton = styled.button`\n  padding: 3px;\n  border-radius: 10px;\n  font-weight: bold;\n`;\n\nconst PokemonListItem = (props) => {\n  const { name, url } = props.pokemon;\n  const id = url.match(\"/[0-9]+/\").toString().replaceAll(\"/\", \"\");\n  const [buttonText, setButtontext] = useState(\"Catch\");\n  const [collectedPokemons, catchPokemon] = useContext(CatchPokemonContext);\n\n  const theme = useContext(ThemeContext)[0];\n  const currentTheme = AppTheme[theme];\n\n  const addPokemonToContext = () => {\n    if (\n      collectedPokemons.filter((pokemon) => pokemon.name === props.pokemon.name)\n        .length < 1\n    ) {\n      catchPokemon((prevPokemons) => [...prevPokemons, props.pokemon]);\n      setButtontext(\"Catched\");\n    } else {\n      setButtontext(\"Already catched!\");\n    }\n  };\n\n  return (\n    <ListItemCard currentTheme={currentTheme}>\n      <React.Fragment>\n        <ListItemText>Name: {name}</ListItemText>\n        <ListItemText>\n          <ListItemLink to={`/pokemon/${id}`}>Details</ListItemLink>\n        </ListItemText>\n        {/* <ListItemText>Original url: {url}</ListItemText> */}\n        {props.button ? (\n          <CatchButton onClick={addPokemonToContext}>{buttonText}</CatchButton>\n        ) : (\n          \"\"\n        )}\n      </React.Fragment>\n    </ListItemCard>\n  );\n};\n\nexport default PokemonListItem;\n\n// </ListItemText><ListItemLink to={{ pathname: `/pokemon/${id}` }}>Details</ListItemLink> -\n","import { useState, useEffect } from \"react\";\n// import Axios from \"axios\";\nimport axios from \"axios\";\n\nexport const useFetch = (url) => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [fetchedData, setFetchedData] = useState([]);\n\n  // useEffect(() => {\n  //   let mounted = true;\n  //   const loadData = async () => {\n  //     const response = await Axios.get(url);\n  //     if (mounted) {\n  //       setFetchedData(response.data);\n  //       if (fetchedData !== []) {\n  //         setIsLoading(false);\n  //       }\n  //     }\n  //   };\n  //   loadData();\n  //   return () => {\n  //     mounted = false;\n  //   };\n  // }, [url, fetchedData]);\n\n  useEffect(() => {\n    let mounted = true;\n    axios\n      .get(url)\n      .then((response) => {\n        if (mounted) {\n          setFetchedData(response.data);\n        }\n      })\n      .then(() => {\n        if (fetchedData !== []) {\n          setIsLoading(false);\n        }\n      });\n    return () => (mounted = false);\n  }, [url, fetchedData]);\n  return [isLoading, fetchedData];\n};\n","import React, { useContext } from \"react\";\nimport PokemonListItem from \"./PokemonListItem\";\nimport { useFetch } from \"../../hooks/useFetch\";\nimport styled from \"styled-components\";\nimport AppTheme from \"../../contexts/ThemeStyle\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst PokemonListContainer = styled.div`\n  display: inline-flex;\n  margin: 1% 2.5%;\n`;\n\nconst PokemonList = (props) => {\n  const [isLoading, pokemons] = useFetch(\"https://pokeapi.co/api/v2/pokemon\");\n  const theme = useContext(ThemeContext)[0];\n  const currentTheme = AppTheme[theme];\n\n  if (!isLoading) {\n    return pokemons.results.map((pokemon, index) => (\n      <PokemonListContainer key={index}>\n        <PokemonListItem pokemon={pokemon} button={true} />\n      </PokemonListContainer>\n    ));\n  } else {\n    return (\n      <div className=\"detailItem\">\n        <p>Problem occurred during loading!</p>\n      </div>\n    );\n  }\n};\n\nexport default PokemonList;\n","import React, { useContext } from \"react\";\nimport PropTypes from \"prop-types\";\nimport styled from \"styled-components\";\nimport AppTheme from \"../../contexts/ThemeStyle\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst ListItemCard = styled.div`\n  font-family: arial;\n  border: solid black 1px;\n  border-radius: 15px;\n  height: 80px;\n  width: 250px;\n  text-align: center;\n  margin: 5px 0;\n  background-color: ${(props) => props.currentTheme.cardBackgroundColor};\n  opacity: 0.9;\n  box-shadow: 4px 4px 8px 0 rgba(0, 0, 0, 0.4);\n  transition: 0.3s;\n  &:hover {\n    box-shadow: 8px 8px 16px 0 rgba(0, 0, 0, 0.9);\n  }\n`;\n\nconst ListItemText = styled.p`\n  font-size: 1em;\n  margin: 1%;\n  color: white;\n  text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\n  text-align: center;\n`;\n\nconst ListItemLink = styled.a`\n  margin: 1%;\n  font-size: 1em;\n  font-weight: bold;\n  color: white;\n  text-decoration: none;\n  text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\n  text-align: center;\n  &:hover {\n    color: ${(props) => {\n      if (props.index % 3 === 0) {\n        return \"blue\";\n      } else if (props.index % 3 === 1) {\n        return \"orange\";\n      } else {\n        return \"red\";\n      }\n    }};\n  }\n`;\n\nconst TypeName = styled.span`\n  color: ${(props) => {\n    if (props.index % 3 === 0) {\n      return \"cyan\";\n    } else if (props.index % 3 === 1) {\n      return \"yellow\";\n    } else {\n      return \"pink\";\n    }\n  }};\n`;\n\nconst TypeListItem = (props) => {\n  const { name, url } = props.type;\n  const test = url;\n\n  const theme = useContext(ThemeContext)[0];\n  const currentTheme = AppTheme[theme];\n\n  return (\n    <ListItemCard currentTheme={currentTheme}>\n      <ListItemText name={name}>\n        Type name:{\" \"}\n        <TypeName index={props.index} name={name}>\n          {name}\n        </TypeName>{\" \"}\n      </ListItemText>\n      <ListItemText>\n        Original detail:{\" \"}\n        <ListItemLink index={props.index} href={test}>\n          Go to page\n        </ListItemLink>\n      </ListItemText>\n    </ListItemCard>\n  );\n};\n\nTypeListItem.propTypes = {\n  type: PropTypes.object.isRequired,\n};\n\nexport default TypeListItem;\n\n// <ExternalLink href={test}>Go to page</ExternalLink>\n","import React, { useContext } from \"react\";\nimport { useFetch } from \"../../hooks/useFetch\";\nimport TypeListItem from \"./TypeListItem\";\nimport styled from \"styled-components\";\nimport AppTheme from \"../../contexts/ThemeStyle\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst TypeListContainer = styled.div`\n  display: inline-flex;\n  margin: 1% 2%;\n`;\n\nconst TypeList = (props) => {\n  const [isLoading, types] = useFetch(\"https://pokeapi.co/api/v2/type\");\n\n  const theme = useContext(ThemeContext)[0];\n  const currentTheme = AppTheme[theme];\n\n  if (!isLoading) {\n    return types.results.map((type, index) => (\n      <TypeListContainer key={index}>\n        <TypeListItem type={type} index={index} />\n      </TypeListContainer>\n    ));\n  } else {\n    return (\n      <div className=\"detailItem\">\n        <p>Problem occurred during loading!</p>\n      </div>\n    );\n  }\n};\n\nexport default TypeList;\n","import { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { ColorContext } from \"../../contexts/ColorContext\";\nimport AppTheme from \"../../contexts/ThemeStyle\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst SimpleAttributeText = styled.p`\n  font-size: 1.2em;\n  margin: 2%;\n  color: ${(props) => props.color};\n  transition: 1s;\n  text-shadow: -1px 0 black, 0 1px black, 1px 0 black, 0 -1px black;\n  text-align: center;\n`;\n\nconst AttributeName = styled.span`\n  color: ${(props) => props.color};\n  font-weight: bold;\n`;\n\nconst SimpleItem = (props) => {\n  const fontColor = useContext(ColorContext)[0];\n\n  const theme = useContext(ThemeContext)[0];\n  const currentTheme = AppTheme[theme];\n\n  return (\n    <div className=\"simpleData\">\n      <SimpleAttributeText color={fontColor}>\n        <AttributeName color={fontColor}>\n          {props.attribute + \": \"}\n        </AttributeName>\n        {props.simpleData.toString()}\n      </SimpleAttributeText>\n    </div>\n  );\n};\n\nexport default SimpleItem;\n","import React, { useState, useContext } from \"react\";\nimport { useFetch } from \"../../hooks/useFetch\";\nimport SimpleItem from \"./SimpleItem\";\nimport styled from \"styled-components\";\nimport { ColorContext } from \"../../contexts/ColorContext\";\nimport { CatchPokemonContext } from \"../../contexts/CatchPokemonContext\";\nimport AppTheme from \"../../contexts/ThemeStyle\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst DetailsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst DetailsCard = styled.div`\n  font-family: arial;\n  /* display: inline-block; */\n  border: solid black 2px;\n  border-radius: 20px;\n  height: 375px;\n  width: 500px;\n  text-align: center;\n  margin: 15px 0;\n  padding: 10px;\n  background-color: ${(props) => props.currentTheme.cardBackgroundColor};\n  opacity: 0.9;\n  box-shadow: 8px 8px 16px 0 rgba(0, 0, 0, 0.4);\n  transition: 0.3s;\n  &:hover {\n    box-shadow: 16px 16px 32px 0 rgba(0, 0, 0, 0.9);\n    background-color: white;\n    transition: 1s;\n  }\n`;\n\nconst CatchButton = styled.button`\n  padding: 3px;\n  border-radius: 10px;\n  font-weight: bold;\n`;\n\nconst PokemonDetail = (props) => {\n  const [id, setId] = useState(null);\n  if (id === null) {\n    setId(props.match.params.id);\n  }\n\n  const url = `https://pokeapi.co/api/v2/pokemon/${id}`;\n  const [isLoading, details] = useFetch(url);\n\n  //if we pass a data to the provider, we can access it\n  const setFontColor = useContext(ColorContext)[1];\n\n  const [buttonText, setButtontext] = useState(\"Catch\");\n  const [collectedPokemons, catchPokemon] = useContext(CatchPokemonContext);\n\n  const theme = useContext(ThemeContext)[0];\n  const currentTheme = AppTheme[theme];\n\n  const addPokemonToContext = () => {\n    if (\n      collectedPokemons.filter((pokemon) => pokemon.name === details.name)\n        .length < 1\n    ) {\n      catchPokemon((prevPokemons) => [\n        ...prevPokemons,\n        { name: details.name, url: url + \"/\" },\n      ]);\n      setButtontext(\"Catched\");\n    } else {\n      setButtontext(\"Already catched!\");\n    }\n  };\n\n  if (!isLoading) {\n    return (\n      <DetailsContainer>\n        <React.Fragment>\n          <DetailsCard\n            key={id}\n            currentTheme={currentTheme}\n            onMouseEnter={() => {\n              setFontColor((prevColor) => \"rgba(255, 115, 110, 0.9)\");\n            }}\n            onMouseLeave={() => {\n              setFontColor((prevColor) => \"white\");\n            }}\n          >\n            {Object.entries(details).map(([key, value], index) =>\n              typeof value === \"number\" ||\n              typeof value === \"string\" ||\n              typeof value === \"boolean\" ? (\n                <SimpleItem key={key} attribute={key} simpleData={value} />\n              ) : (\n                \"\"\n                /*<DetailItem attribute={key} detailData={value} />*/\n              )\n            )}\n            <CatchButton onClick={addPokemonToContext}>\n              {buttonText}\n            </CatchButton>\n          </DetailsCard>\n        </React.Fragment>\n      </DetailsContainer>\n    );\n  } else {\n    return (\n      <div className=\"detailItem\">\n        <p>Problem occurred during loading!</p>\n      </div>\n    );\n  }\n};\n\nexport default PokemonDetail;\n","import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport PokemonListItem from \"./PokemonListItem\";\nimport { CatchPokemonContext } from \"../../contexts/CatchPokemonContext\";\nimport AppTheme from \"../../contexts/ThemeStyle\";\nimport { ThemeContext } from \"../../contexts/ThemeContext\";\n\nconst CatchedListContainer = styled.div`\n  display: inline-flex;\n  margin: 1% 2.5%;\n`;\n\nconst CatchedList = (props) => {\n  const collectedPokemons = useContext(CatchPokemonContext)[0];\n  const theme = useContext(ThemeContext)[0];\n  const currentTheme = AppTheme[theme];\n\n  return collectedPokemons.map((pokemon, index) => (\n    <CatchedListContainer key={index}>\n      <PokemonListItem pokemon={pokemon} button={false} />\n    </CatchedListContainer>\n  ));\n};\n\nexport default CatchedList;\n","import React, { useContext } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport \"./App.css\";\nimport { ColorProvider } from \"./contexts/ColorContext\";\nimport { CatchPokemonProvider } from \"./contexts/CatchPokemonContext\";\nimport MainBody from \"./elements/MainBody\";\nimport Navbar from \"./components/layout/Navbar\";\nimport MainPage from \"./components/pages/MainPage\";\nimport PokemonList from \"./components/pages/PokemonList\";\nimport TypeList from \"./components/pages/TypeList\";\nimport PokemonDetail from \"./components/pages/PokemonDetail\";\nimport CatchedList from \"./components/pages/CatchedList\";\nimport { ThemeContext } from \"./contexts/ThemeContext\";\nimport { ThemeContextProvider } from \"./contexts/ThemeContext\";\nimport AppTheme from \"./contexts/ThemeStyle\";\n\nconst App = (props) => {\n  const theme = useContext(ThemeContext)[0];\n  const currentTheme = AppTheme[theme];\n\n  return (\n    <ThemeContextProvider>\n      <ColorProvider>\n        <CatchPokemonProvider>\n          <Router>\n            <MainBody currentTheme={currentTheme}>\n              <Navbar />\n              <Route exact path=\"/\" component={MainPage} />\n              <Route path=\"/pokemons\" component={PokemonList} />\n              <Route path=\"/types\" component={TypeList} />\n              <Route path=\"/pokemon/:id\" component={PokemonDetail} />\n              <Route path=\"/catched\" component={CatchedList} />\n            </MainBody>\n          </Router>\n        </CatchPokemonProvider>\n      </ColorProvider>\n    </ThemeContextProvider>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}